N = 8  
def print_solution(board):
    for row in board:
        line = ""
        for cell in row:
            line += "Q " if cell else ". "
        print(line)
    print()
def is_safe(board, row, col):
    # Check same column
    for i in range(row):
        if board[i][col]:
            return False
    i, j = row, col
    while i >= 0 and j >= 0:
        if board[i][j]:
            return False
        i -= 1
        j -= 1
    i, j = row, col
    while i >= 0 and j < N:
        if board[i][j]:
            return False
        i -= 1
        j += 1
    return True
def solve_n_queens(board, row):
    if row == N:
        print_solution(board)
        return True  # Return True to print only one solution
        for col in range(N):
        if is_safe(board, row, col):
            board[row][col] = 1
            if solve_n_queens(board, row + 1):
                return True
            board[row][col] = 0  # Backtrack
    return False
board = [[0] * N for _ in range(N)]
if not solve_n_queens(board, 0):
    print("No solution found.")
